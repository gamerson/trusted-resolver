<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.liferay</groupId>
	<artifactId>trusted-resolver</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<bnd.version>4.2.0</bnd.version>
	</properties>

	<modules>
		<module>trusted.resolver.app</module>
		<module>trusted.resolver.hook</module>
		<module>trusted.resolver.license.provider</module>
		<module>trusted.resolver.requires.license</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>enterprise-api</artifactId>
				<version>7.0.0</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>debug-bundles</artifactId>
				<version>7.0.0</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>impl-index</artifactId>
				<version>7.0.0</version>
				<type>pom</type>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>osgi-api</artifactId>
				<version>7.0.0</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi.enroute</groupId>
				<artifactId>test-bundles</artifactId>
				<version>7.0.0</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Use the bnd-maven-plugin and assemble the symbolic names -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<bnd><![CDATA[
Bundle-SymbolicName: ${project.groupId}.${project.artifactId}
-contract: *
]]></bnd>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>bnd-process</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Required to make the maven-jar-plugin pick up the bnd
					generated manifest. Also avoid packaging empty Jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>

				<!-- Setup the indexer for running and testing -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-indexer-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<localURLs>REQUIRED</localURLs>
						<attach>false</attach>
					</configuration>
					<executions>
						<execution>
							<id>index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId}</indexName>
							</configuration>
						</execution>
						<execution>
							<id>test-index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId} Test</indexName>
								<outputFile>${project.build.directory}/test-index.xml</outputFile>
								<scopes>
									<scope>test</scope>
								</scopes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the resolver plugin we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-resolver-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnChanges>false</failOnChanges>
						<bndruns>
						</bndruns>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>resolve</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the export plugin we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-export-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<resolve>true</resolve>
						<failOnChanges>true</failOnChanges>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>export</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the testing plugin that we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-testing-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>testing</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Define the version of the baseline plugin we use and
					avoid failing when no baseline jar exists. (for example before the first
					release) -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-baseline-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnMissing>false</failOnMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>baseline</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.liferay</groupId>
				<artifactId>com.liferay.source.formatter</artifactId>
				<version>1.0.820</version>
				<configuration>
					<maxLineLength>120</maxLineLength>
					<baseDir>./</baseDir>
					<autoFix>true</autoFix>
					<processorThreadCount>5</processorThreadCount>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>